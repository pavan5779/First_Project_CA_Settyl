on:
  push:
    branches:
      - staging

env:
  NODE_ENV: staging
  REGISTRY_NAME: supplychainvisibilityacrstaging
  NAMESPACE: supplychainvisibility
  RESOURCE_GROUP: supplychainvisibility-staging
  APP_NAME: configmanagementapi
  SECRET_NAME: supplychainvisibilitydockerauth
  CLUSTER_NAME: supplychainvisibility-staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: azure/docker-login@v1
        with:
          login-server: ${{env.REGISTRY_NAME}}.azurecr.io
          username: ${{ secrets.ACR_SUPPLYCHAINVISIBILITY_STAGING_USERNAME }}
          password: ${{ secrets.ACR_SUPPLYCHAINVISIBILITY_STAGING_PASSWORD }}

      - name: Build and push image to ACR
        id: build-image
        run: |
          docker build "$GITHUB_WORKSPACE/" -f  "Dockerfile" -t ${{env.REGISTRY_NAME}}.azurecr.io/${{env.APP_NAME}}:${{ github.sha }} --label dockerfile-path=Dockerfile --build-arg NODE_ENV=${NODE_ENV}
          docker push ${{env.REGISTRY_NAME}}.azurecr.io/${{env.APP_NAME}}:${{ github.sha }}

      - uses: Azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AKS_STAGING_CLUSTER_CREDS }}
          cluster-name: ${{env.CLUSTER_NAME}}
          resource-group: ${{env.RESOURCE_GROUP}}

      - name: Create namespace
        run: |
          namespacePresent=`kubectl get namespace | grep ${{env.NAMESPACE}} | wc -l`
          if [ $namespacePresent -eq 0 ]
          then
              echo `kubectl create namespace ${{env.NAMESPACE}}`
          fi

      - uses: azure/k8s-create-secret@v1
        with:
          namespace: ${{env.NAMESPACE}}
          container-registry-url: ${{env.REGISTRY_NAME}}.azurecr.io
          container-registry-username: ${{ secrets.ACR_SUPPLYCHAINVISIBILITY_STAGING_USERNAME }}
          container-registry-password: ${{ secrets.ACR_SUPPLYCHAINVISIBILITY_STAGING_PASSWORD }}
          secret-name: ${{env.SECRET_NAME}}

      - uses: azure/k8s-deploy@v1.2
        with:
          namespace: ${{env.NAMESPACE}}
          manifests: |
            manifests/staging/deployment.yml
            manifests/staging/service.yml
          images: |
            ${{env.REGISTRY_NAME}}.azurecr.io/${{env.APP_NAME}}:${{ github.sha }}
          imagepullsecrets: |
            ${{env.SECRET_NAME}}
