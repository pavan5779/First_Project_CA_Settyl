on:
    push:
      branches:
        - stage-test
env:
    NODE_ENV: production
    REGISTRY_NAME: supplychainvisibilitygcrstaging
    PROJECT_ID: settyl-gcp-infra
    CLUSTER_NAME: supplychainvisibility-staging
    REGION: us-east1
    NAMESPACE: supplychainvisibility
    APP_NAME: configmanagementapi
    SECRET_NAME: supplychainvisibility-dockerauth
jobs:
    build-and-deploy:
      runs-on: ubuntu-latest
      steps:
        # Checkout repository
        - name: Checkout code
          uses: actions/checkout@v2
  
        # Set up Google Cloud Credentials
        - name: Set up Google Cloud Credentials
          uses: google-github-actions/setup-gcloud@v3
          with:
            project_id: ${{ env.PROJECT_ID }}
            credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}
  
        # Build Docker image and push to GCR
        - name: Build and Push Docker image to GCR
          run: |
            docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.APP_NAME }}:${{ github.sha }} .
            docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.APP_NAME }}:${{ github.sha }}
  
        # Set up GKE context using gcloud CLI
        - name: Set up GKE context
          run: |
            gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} \
              --region ${{ env.REGION }} \
              --project ${{ env.PROJECT_ID }}
  
        # Create namespace if it doesn't exist
        - name: Create Namespace in GKE if needed
          run: |
            kubectl get namespace ${{ env.NAMESPACE }} || kubectl create namespace ${{ env.NAMESPACE }}
  
        # Create Docker registry secret
        - name: Create Kubernetes Secret for Docker image pull
          run: |
            kubectl create secret docker-registry ${{ env.SECRET_NAME }} \
              --docker-server=gcr.io \
              --docker-username=_json_key \
              --docker-password="${{ secrets.GCP_CREDENTIALS_JSON }}" \
              --docker-email=your-email@example.com \
              --namespace=${{ env.NAMESPACE }} || echo "Secret already exists"
        
              
        # Deploy to GKE
        - name: Deploy to GKE
          uses: azure/k8s-deploy@v1.2
          with:
            kubeconfig: ${{ secrets.GKE_KUBECONFIG }}
            namespace: ${{ env.NAMESPACE }}
            manifests: |
              manifests/deployment.yaml
              manifests/service.yaml
            images: |
              gcr.io/${{ env.PROJECT_ID }}/${{ env.APP_NAME }}:${{ github.sha }}
            imagepullsecrets: |
              ${{ env.SECRET_NAME }}
  